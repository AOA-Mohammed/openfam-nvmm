/*
 *  (c) Copyright 2016-2017 Hewlett Packard Enterprise Development Company LP.
 *
 *  This program is free software: you can redistribute it and/or modify
 *  it under the terms of the GNU Lesser General Public License as published by
 *  the Free Software Foundation, either version 3 of the License, or
 *  (at your option) any later version.
 *
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU Lesser General Public License for more details.
 *
 *  You should have received a copy of the GNU Lesser General Public License
 *  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 *
 *  As an exception, the copyright holders of this Library grant you permission
 *  to (i) compile an Application with the Library, and (ii) distribute the
 *  Application containing code generated by the Library and added to the
 *  Application during this compilation process under terms of your choice,
 *  provided you also meet the terms and conditions of the Application license.
 *
 */

#include <unordered_map>
#include <string>
#include <iostream>

#include "crash_points.h"

namespace nvmm {

std::unordered_map<std::string, bool> CrashPoints::locations_;

void CrashPoints::CrashHere(std::string location) {
#ifdef DEBUG
    auto found = locations_.find(location);
    if (found!=locations_.end() && found->second == true) {
        std::cout << "I'm going to crash at " << location << std::endl;
        exit(1);
    }
#endif
    return;
}

void CrashPoints::EnableCrashPoint(std::string location) {
#ifdef DEBUG
    locations_[location] = true;
#endif
    return;
}

void CrashPoints::DisableCrashPoint(std::string location) {
#ifdef DEBUG
    locations_[location] = false;
#endif
    return;
}


} // namespace nvmm
